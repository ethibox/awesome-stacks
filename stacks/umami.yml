# DOMAIN=example.com docker stack deploy -c umami.yml umami

version: '3.8'

services:
  umami:
    image: docker.umami.is/umami-software/umami:${VERSION:-postgresql-v2.13.2}
    environment:
      - DATABASE_TYPE=postgresql
      - DATABASE_URL=postgresql://umami:myp@ssw0rd@postgres:5432/umami
      - HASH_SALT=${HASH_SALT:-replace-me-with-a-random-string}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.umami-${NUMBER:-1}.rule=Host(`${DOMAIN:-umami.localhost}`)
        - traefik.http.routers.umami-${NUMBER:-1}.entrypoints=${SCHEME:-https}
        - traefik.http.routers.umami-${NUMBER:-1}.service=umami-${NUMBER:-1}
        - traefik.http.routers.umami-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.umami-${NUMBER:-1}.loadbalancer.server.port=3000
    networks:
      - internal
      - traefik

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=umami
      - POSTGRES_USER=umami
      - POSTGRES_PASSWORD=myp@ssw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "umami"]
    volumes:
      - ${VOLUME_PATH}postgres:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  postgres:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
