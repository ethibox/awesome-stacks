# DOMAIN=example.com docker stack deploy -c taiga.yml taiga
# Default password -> admin:123123

version: '3.8'

x-defaults: &defaults
  environment:
    - TAIGA_HOST=${DOMAIN:-taiga.localhost}
    - TAIGA_SECRET=${TAIGA_SECRET:-mys3cr3t}
    - TAIGA_SCHEME=${SCHEME:-https}
    - TAIGA_PORT=${TAIGA_PORT:-443}
    - DB_HOST=db
    - DB_NAME=taiga
    - DB_USER=postgres
    - DB_PASSWORD=password
    - RABBIT_HOST=rabbit
    - RABBIT_USER=taiga
    - RABBIT_PASSWORD=password
    - RABBIT_VHOST=taiga
    - REDIS_HOST=redis
    - REDIS_DB=0
    - REDIS_PASSWORD=password

services:
  back:
    <<: *defaults
    image: dockertaiga/back:${VERSION:-6.5}
    volumes:
      - ${VOLUME_PATH}media:/taiga-media
    networks:
      - internal

  front:
    <<: *defaults
    image: dockertaiga/front:${VERSION:-6.5}
    networks:
      - internal

  redis:
    <<: *defaults
    image: redis:6-alpine
    command: /bin/sh -c 'redis-server --requirepass $$REDIS_PASSWORD'
    networks:
      - internal

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=taiga
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ${VOLUME_PATH}db:/var/lib/postgresql/data
    networks:
      - internal

  rabbit:
    image: dockertaiga/rabbit:latest
    environment:
      - RABBIT_USER=taiga
      - RABBIT_PASSWORD=password
      - RABBIT_VHOST=taiga
    networks:
      - internal

  events:
    image: dockertaiga/events:latest
    environment:
      - RABBIT_HOST=rabbit
      - RABBIT_VHOST=taiga
      - RABBIT_USER=taiga
      - RABBIT_PASSWORD=password
    networks:
      - internal

  proxy:
    image: dockertaiga/proxy:latest
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.taiga-${NUMBER:-1}.rule=Host(`${DOMAIN:-taiga.localhost}`)
        - traefik.http.routers.taiga-${NUMBER:-1}.entrypoints=${SCHEME:-https}
        - traefik.http.routers.taiga-${NUMBER:-1}.service=taiga-${NUMBER:-1}
        - traefik.http.routers.taiga-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.taiga-${NUMBER:-1}.loadbalancer.server.port=80
    environment:
      - TAIGA_HOST=${DOMAIN:-taiga.localhost}
      - TAIGA_BACK_HOST=back
      - TAIGA_FRONT_HOST=front
      - EVENTS_HOST=events
    networks:
      - internal
      - traefik

volumes:
  media:
  db:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
