# DOMAIN=example.com docker stack deploy -c gamevault.yml gamevault

version: '3.8'

services:
  app:
    image: ethibox/gamevault:${VERSION:-latest}
    environment:
      - DB_HOST=postgres
      - DB_USERNAME=gamevault
      - DB_PASSWORD=myp@ssw0rd
      - DB_SYSTEM=postgresql
      - SERVER_ACCOUNT_ACTIVATION_DISABLED=${SERVER_ACCOUNT_ACTIVATION_DISABLED:-false}
      - SERVER_ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - SERVER_ADMIN_PASSWORD=${SERVER_ADMIN_PASSWORD:-myp@ssw0rd}
      - RAWG_API_KEY=${RAWG_API_KEY:-yourapikeyhere}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.gamevault-${NUMBER:-1}.rule=Host(`${DOMAIN:-gamevault.localhost}`)
        - traefik.http.routers.gamevault-${NUMBER:-1}.entrypoints=${SCHEME:-https}
        - traefik.http.routers.gamevault-${NUMBER:-1}.service=gamevault-${NUMBER:-1}
        - traefik.http.routers.gamevault-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.gamevault-${NUMBER:-1}.loadbalancer.server.port=8080
    networks:
      - internal
      - traefik

  postgres:
    image: postgres:${POSTGRES_VERSION:-12-alpine}
    environment:
      - POSTGRES_DB=gamevault
      - POSTGRES_USER=gamevault
      - POSTGRES_PASSWORD=myp@ssw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "gamevault"]
    volumes:
      - ${VOLUME_PATH}postgres:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  postgres:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
